
= render partial: "partials/logged_in_header"
/ SECONDARY HEADER BAR
.container.full-width.blue-bg.no-padding.white.dashboard-header
  .row
    .col-md-6.col-xs-12.align-center
      .single-line.no-opacity
      %h1 HERE ARE YOUR THINGS
    .col-md-1.col-md-offset-2.col-sm-4.col-xs-4.align-center
      = link_to new_packing_supplies_request_path do
        .service-box
          .service-icon
            %i.fa.fa-dropbox
          .service-desc
            %h6
              Packing Supplies
    .col-md-1.col-sm-4.col-xs-4.align-center
      - if !@has_existing_pickup
        = link_to new_pickup_request_path do
          .service-box
            .service-icon
              %i.fa.fa-truck
            .service-desc
              %h6
                New
                %br/ 
                Pickup 
      - else
        = link_to edit_pickup_request_path(id: @has_existing_pickup) do
          .service-box
            .service-icon
              %i.fa.fa-truck
            .service-desc
              %h6
                Edit
                %br/ 
                Pickup 


    .col-md-1.col-sm-4.col-xs-4.align-center
      = link_to faq_path, target: "_blank" do
        .service-box
          .service-icon
            %i.fa.fa-question-circle.fa-3x
          .service-desc
            %h6
              Have a
              %br>/
              Question?
%br/
%br/
%br/

// Main Body Content
.container.inventory
  .row
    .col-md-10.col-md-offset-1
      .row
        .col-md-8
          .div#storage-empty.hidden.width-90
            = link_to new_pickup_request_path do
              %img{:src => "https://s3.amazonaws.com/storage_rails_app_dev/images/nothing-in-storage.png", :alt => ""}/ 
         
          / Existing Inventory Row 
          %form#delivery-form{:action => ""}
            .row
              %h2
                %span.items-count#items-in-storage #{@num_storage_items}
                / %span.items-count#items-in-storage 0
                Items In Storage
                / %p.pull-right.half-opacity Click items to select them for delivery
              .double-line
              - @storage_items.each do |storage_item|
                .col-md-6.col-sm-6.col-xs-6.inventory-entries.delivery-entry{:id => "#{storage_item.id}"}
                  .inner
                    .crop-mask
                      .crop-mask-img-wrapper
                        = image_tag(storage_item.image_url, class: "img-responsive")
                      .item-description
                        %p.subtitle.box-subtitle
                          = storage_item.get_description
                        = link_to "(click here to edit entry)", {:action => "edit", "id"=>"#{storage_item.id}"}, class:"align-center description-edit-boxed"


                    %h4.storage-item-title= storage_item.get_title

                    / %p.subtitle.box-subtitle.col-md-12.col-sm-12.col-xs-12= storage_item.get_description
                    / # = link_to "edit", {:action => "edit", "id"=>"#{storage_item.id}"}, class:"pull-right edit-btn"
              .col-md-12.col-sm-12.col-xs-12.align-right
                %br/
                / # =link_to "Want to learn how deliveries work?", {:controller => "packing_supplies_requests", :action => "new"}
                / %a.pull-right.pointer.half-opactiy{"data-target" => "#aboutDeliveriesModal", "data-toggle" => "modal"}
                / Want to learn how deliveries work?
         
          %br/

          .row#pending-delivery-form
            %h2
              %span.items-count#items-pending-delivery #{@num_storage_items}
              / %span.items-count#items-in-storage 0
              Items Pending Delivery
              - if @has_existing_delivery
                %p.pull-right.half-opacity
                  =@existing_delivery.delivery_time.strftime("%B %d at %l:%M %p")
            .double-line
            - @delivery_items.each do |delivery_item|
              .col-md-6.col-sm-6.col-xs-6.inventory-entries.delivery-entry{:id => "#{delivery_item.id}"}
                .inner
                  .crop-mask
                    .crop-mask-img-wrapper
                      = image_tag(delivery_item.image_url, class: "img-responsive")
                    .item-description
                      %p.subtitle.box-subtitle
                        = delivery_item.get_description
                      = link_to "(click here to edit entry)", {:action => "edit", "id"=>"#{delivery_item.id}"}, class:"align-center description-edit-boxed"
                  %h4.storage-item-title= delivery_item.get_title

        
          %br/
          %br/
          %form#pickup-form{:action => ""}
            / Boxes At Home
            .row
              %h2
                %span.items-count#boxes-at-home #{@items_at_home}
                Items Awaiting Pickup
                - if @has_existing_pickup
                  %p.pull-right.half-opacity
                    =@existing_pickup.delivery_time.strftime("%B %d at %l:%M %p")
              .double-line
            .row
              .col-md-12.inventory-entries.no-hover.boxed-gray.align-center
                %br/ 
                %p.blue.heavy-font
                  These are the items we will pick up
                  - if @has_existing_pickup
                    on
                    =@existing_pickup.delivery_time.strftime("%B %d at %l:%M %p")

                %p
                  If you like, you can give them an image, title, and description to help find them later.
                  Otherwise our drivers will help catalog your items when they arrive for pickup. 
                %br/ 
            .row
              / - 3.times do
              - @boxes_at_home.each do |small_item|
                .col-md-6.col-sm-6.col-xs-6.inventory-entries.pickup-entry
                  / = link_to {:action => "edit", "id"=>"#{small_item.id}"}, class:"inner" do
                  .inner
                    .crop-mask
                      .crop-mask-img-wrapper
                        = image_tag(small_item.image_url, class: "img-responsive")
                      .item-description
                        %p.subtitle.box-subtitle.col-md-12.col-sm-12.col-xs-12= small_item.get_description


                    %h4.storage-item-title= small_item.get_title
                    / %p.subtitle.box-subtitle.col-md-12.col-sm-12.col-xs-12= small_item.get_description
                    = link_to "(click here to edit entry)", {:action => "edit", "id"=>"#{small_item.id}"}, class:"align-center bottom-edit-btn"
                    / = link_to "edit", {:action => "edit", "id"=>"#{small_item.id}"}, class:"pull-right edit-btn visible"
                      
              - @medium_items_at_home.each do |medium_item|
                .col-md-6.col-sm-6.col-xs-6.inventory-entries.pickup-entry
                  .inner
                    .crop-mask
                      .crop-mask-img-wrapper
                        = image_tag(medium_item.image_url, class: "img-responsive")
                      .item-description
                        %p.subtitle.box-subtitle.col-md-12.col-sm-12.col-xs-12= medium_item.get_description
                    %h4.storage-item-title= medium_item.get_title
                    = link_to "(click here to edit entry)", {:action => "edit", "id"=>"#{medium_item.id}"}, class:"align-center bottom-edit-btn"
                    / = link_to "edit", {:action => "edit", "id"=>"#{medium_item.id}"}, class:"pull-right edit-btn visible"
              - @large_items_at_home.each do |large_item|
                .col-md-6.col-sm-6.col-xs-6.inventory-entries.pickup-entry
                  .inner
                    .crop-mask
                      .crop-mask-img-wrapper
                        = image_tag(large_item.image_url, class: "img-responsive")
                      .item-description
                        %p.subtitle.box-subtitle.col-md-12.col-sm-12.col-xs-12= large_item.get_description
                    %h4.storage-item-title= large_item.get_title
                    = link_to "(click here to edit entry)", {:action => "edit", "id"=>"#{large_item.id}"}, class:"align-center bottom-edit-btn"
                    / = link_to "edit", {:action => "edit", "id"=>"#{large_item.id}"}, class:"pull-right edit-btn visible"
              - @extra_large_items_at_home.each do |xl_item|
                .col-md-6.col-sm-6.col-xs-6.inventory-entries.pickup-entry
                  .inner
                    .crop-mask
                      .crop-mask-img-wrapper
                        = image_tag(xl_item.image_url, class: "img-responsive")
                      .item-description
                        %p.subtitle.box-subtitle.col-md-12.col-sm-12.col-xs-12= xl_item.get_description
                    %h4.storage-item-title= xl_item.get_title
                    = link_to "(click here to edit entry)", {:action => "edit", "id"=>"#{xl_item.id}"}, class:"align-center bottom-edit-btn"
                    / = link_to "edit", {:action => "edit", "id"=>"#{xl_item.id}"}, class:"pull-right edit-btn visible"
                     
    
          
        .col-md-4.inventory-sidebar
          .row.sidebar-txtentry.light-blue-bg
            .innert
              %h5.align-center Notifications
              .single-line
              %ul
                - if @has_existing_pickup
                  %li 
                    %span.order-item You have #{@items_at_home} items scheduled for pickup on
                    =@existing_pickup.delivery_time.strftime("%B %d at %l:%M %p")
                - if @has_existing_delivery
                  %li 
                    %span.order-item You have #{@delivery_items.count} items scheduled for delivery on
                    =@existing_delivery.delivery_time.strftime("%B %d at %l:%M %p")
                - if !@has_existing_pickup && !@has_existing_delivery
                  %li 
                    %span.order-item You have no new notifications!

          %br/
          .row.sidebar-txtentry.bg-gray
            .inner.align-center
              %h5 Share and Save
              %p.small-text
                For each friend you invite to TSYN we'll take $25 off your monthly bill.
                %br/  
                %a.black-hover{:href => ""}
                = link_to "Click Here",  users_referral_path
                to get started
          / .row.sidebar-txtentry.bg-gray
          /   .inner
          /     %h5 Inventory in Storage
          /     .single-line
          /     %ul.no-list
          /       %li
          /         %span.order-item  Boxes
          /         %span.pull-right 4
          /       %li
          /         %span.order-item Wardrobe Boxes
          /         %span.pull-right 1
          /       %li
          /         %span.order-item Couches
          /         %span.pull-right 1
          .row
            .boxed-gray.continue-button  
              - if !@has_existing_pickup
                = link_to new_pickup_request_path do
                  %button#pickup-button.btn.btn-primary.gray-bg{:disabled => false, :type => "button"}
                    Request New Pickup
              - else
                = link_to edit_pickup_request_path(id: @has_existing_pickup) do
                  %button#pickup-button.btn.btn-primary.gray-bg.blue-bg-hover.no-border{:type => "button"} Edit Pickup
              - if !@has_existing_delivery
                = link_to new_delivery_request_path do
                  %button#delivery-button.btn.btn-primary.blue-bg.blue-bg-hover{:type => "button"} Request Delivery
              - else
                = link_to edit_delivery_request_path(id: @has_existing_delivery) do
                  %button#delivery-button.btn.btn-primary.blue-bg.blue-bg-hover{:type => "button"} Edit Delivery
%br/
%br/
%br/
= render partial: "partials/footer"
= render partial: "partials/aboutDeliveriesModal"



:javascript
  var numDeliveryItems = 0;
  var numPickupItems = 0;

  $(document).ready(function(){
    var atHome = parseInt($("#boxes-at-home").html());
    var inStorage =parseInt($("#items-in-storage").html());
    var pendingDelivery = parseInt($("#items-pending-delivery").html());
    console.log(atHome);
    console.log(inStorage);
    if (atHome == 0){
      $("#pickup-form").addClass("hidden");
    }
    if (inStorage == 0){
      $("#delivery-form").addClass("hidden");
    }
    if(pendingDelivery == 0){
      $("#pending-delivery-form").addClass("hidden");
    }
    if (atHome == 0 && inStorage == 0){
      $("#storage-empty").toggleClass("hidden");
    }

  });

  // Delivery Entry Selected
  // $(".delivery-entry").click(function() {
    // $(this).toggleClass("selected-item");

    //   if($(this).hasClass("selected-item")){
    //   numDeliveryItems = numDeliveryItems + 1;
    //     $('input:first', this).prop('checked', true);

    // } else {
    //   numDeliveryItems = numDeliveryItems - 1;
    //   $('input:first', this).prop('checked', false);

    // }
    // console.log("numDeliveryItems:" + numDeliveryItems);

  //   if (numDeliveryItems == 0) $("#delivery-button").attr("disabled", "disabled");
  //   else {
  //    console.log("Delivery BUTTON REMOVING DISABLED");
  //     $("#delivery-button").removeAttr("disabled"); 
  //     $(".pickup-entry").removeClass("selected-item");
  //     // $("#pickup-button").attr("disabled", "disabled");
  //     numPickupItems = 0;  
  //    } 
  // });

  /// Pick Up Entry Selected
  // $(".pickup-entry").click(function() {
  //     // $(this).toggleClass("selected-item");
  //     $('input:first', this).prop('checked', true);

  //     if($(this).hasClass("selected-item")){
  //     numPickupItems = numPickupItems + 1;
  //   } else {
  //     numPickupItems = numPickupItems - 1;
  //   }
  //   console.log("numPickupItems:" + numPickupItems);

  //   if (numPickupItems == 0) console.log("the pickup button would be disabled here bc there are no items selected");
  //   else {
  //     console.log("pickup BUTTON REMOVING DISABLED");
  //     $("#pickup-button").removeAttr("disabled");   
  //     $(".delivery-entry").removeClass("selected-item");
  //     $("#delivery-button").attr("disabled", "disabled");
  //     numDeliveryItems = 0;
  //    } 
  // });

  // $("#pickup-button").click(function(event){
  //     event.preventDefault();
  //    var selectedEntries = $(".selected-item.pickup-entry");
  //    console.log(selectedEntries.size());
  //    var destinationURL = "/pickup_requests/new/";
  //    window.location.href = destinationURL;
  // });

  // $("#delivery-button").click(function(){
  //    event.preventDefault();
  //    var selectedEntries = $(".selected-item.delivery-entry");
  //    var itemsList = "";
  //    var numItems = 0;
  //    selectedEntries.each(function(){
  //     var elemId = $(this).attr('id');
  //     if(numItems == 0){
  //       itemsList = elemId;
  //     } else{
  //       itemsList = itemsList + "," + elemId;
  //     }
  //     numItems += 1;
  //    });
  //    console.log(selectedEntries.size());
  //    console.log(itemsList);

  //    var destinationURL = "/delivery_requests/new/" + itemsList;
  //    window.location.href = destinationURL;
  // });

  
