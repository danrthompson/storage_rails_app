
= render partial: "partials/logged_in_header"   
= render partial: "partials/blue_bar", locals:{mainText:"Item Delivery", dashboard:true, faq:true}
= render :partial => 'partials/nudge_icon'

/ Section: ITEM SELECTION
%section#about.home-section.text-center
  .heading-about.marginbot-20
    .container
      .row
        .col-lg-8.col-lg-offset-2
          .section-heading
            - if @edit_page 
              %h2 Edit Delivery
              %p.align-center.light-gray
                You delivery is currently scheduled for
                =@delivery_request.delivery_time.strftime("%B %d at %l:%M %p")
            - else 
              %h2 New Delivery
  .container
    .row
      .div
        = form_for(@delivery_request) do |f| 
          / Address Info Section
          .row
            .col-md-8.col-md-offset-2
              .row
                = fields_for @user do |field|
                  = render partial: "partials/delivery_addr_date", locals: {field:field, f:f, id:"datepicker"}
                  = render partial: "partials/delivery_date_time", locals: {field:field, f:f,  id:"pickup_datepicker", select_id:"delivery_time"}
              - if @edit_page
                .row.align-left
                  %a{:href => ""} Cancel Delivery

        
          %br/ 
          %br/ 
          %br/ 
          - if @storage_items.count == 0
            .section-heading
              %h2.align-center.blue.no-margin You have nothing in storage
            .row.inventory  
              .col-md-8.col-md-offset-2
                %h2.align-center  
                  (we can only deliver what you have in storage)
            %br/ 
            %br/ 
          - else 
            .section-heading
              %h2.no-margin What Shall We Deliver?

            .row.inventory  
              .col-md-8.col-md-offset-2
                %h2.align-center  
                  (these are your items in storage)
                /   / %p.pull-right.half-opacity Click items to select them for delivery
                / .double-line
                - if @edit_page
                  .hidden
                    - @orginally_selected_item_ids.each do |item|
                      %p.existing-delivery-entry= item
                    
                - @storage_items.each do |storage_item|
                  .col-md-6.col-sm-6.col-xs-6.inventory-entries.delivery-entry
                    .inner
                      .crop-mask
                        .crop-mask-img-wrapper
                          = image_tag(storage_item.image_url, class: "img-responsive")
                        .item-description
                          %p.subtitle.box-subtitle.delivery-entry-title= storage_item.get_description
                          %p.hidden{:id => "#{storage_item.id}_price"}= storage_item.delivery_price
                          / = link_to "(click here to edit entry)", {:action => "edit", "id"=>"#{storage_item.id}"}, class:"align-center description-edit-boxed"
                      %input.pull-left.form-control.delivery-checkbox{:type => "checkbox", id:"#{storage_item.id}"}/
                      %h4.storage-item-title.pull-left{:id => "#{storage_item.id}_title"}= storage_item.get_title
              %br/
            %br/ 
            %br/  
            %br/ 
          .row  
            .col-md-10.col-md-offset-1
              .row.charges-box
                .col-md-10.col-md-offset-1.confirm-elem.light-blue-bg
                  %h5 Delivery Summary
                  %ul#delivery-summary-list
                    %br/ 
                    %li.half-opacity.delivery-line-item
                      Baseline Delivery Fee
                      %span.pull-right
                        $
                        %span.delivery-item-price 
                          10
                  .single-line
                  %ul
                    %li.heavy-font
                      Subtotal
                      %span#order-subtotal.pull-right $00.00
                      %p#not-month.hidden 0
              %br/ 
          = fields_for :storage_item_entries do |f_hidden|
            = f_hidden.hidden_field :storage_item_ids, class:"form-control", id:"delivery-list"
          / .hidden-form.hidden
          /   = f.text_field :user_id, class:"form-control", id:"delivery-list"

          / Bottom Buttons Section
          .col-md-8.col-md-offset-2
            .row
              .col-md-4.bottom-buttons
                .boxed-gray.continue-button
                  = link_to storage_items_path, class:"white" do
                    %button.btn.btn-primary.blue-bg.gray-bg{:type => "button"} Back


                  / %a{:href => "user-newbox.html", :style => "color: white;"} Back
              .col-md-4.col-md-offset-4.bottom-buttons.charges-box
                .boxed-gray.continue-button
                  %button.btn.btn-primary.blue-bg.blue-bg-hover.loadingOnClick#continue-btn{ disabled: true}
                    = f.submit "Confirm Delivery"

= render :partial => "partials/footer"


:javascript
  $(document).ready(function() { 
    sumItemList(".delivery-item-price", "#order-subtotal","");
    checkExistingBoxes();
    valAddrDelivery("#validator-id", "#continue-btn", "#datepicker-value", "#delivery_time");

    $(".form-control").on('input', function() {
      deliveryCheckBtn();
    });  


  });

  var requestedItemsList = "";
  function checkExistingBoxes(){
    $(".existing-delivery-entry").each(function(){
      var id = $(this).html();
      // console.log("id: " + id);
      $("#" + id).prop('checked', true);
      // console.log($("#" + id));
    });
    reviewCheckboxSelection();
  };

  function reviewCheckboxSelection(){
    requestedItemsList = "";
    $(".delivery-checkbox").each(function(){
      var checkboxID = $(this).attr("id");
      var newDivId = checkboxID + "_new_entry";

      // Checks if item has been included      
      if($(this).prop('checked')){

        //console.log("Div Id: #" + newDivId);
          requestedItemsList += checkboxID+",";

        // Updates Payments Summary
        if (!$(this).hasClass("hasBeenIncluded")){
          var existingHTML = $("#delivery-summary-list").html();
          var price = $("#" + checkboxID + "_price").html();
          var title = $("#" + checkboxID + "_title").html();
          existingHTML = "<li class=\"delivery-line-item\" id=\"" + newDivId + "\">" +  title + "<i class=\"pull-right\">$<span class=\"delivery-item-price\">" + price + "</span></i></li>" + existingHTML;
          $("#delivery-summary-list").html(existingHTML);
          $(this).addClass("hasBeenIncluded");
        }
      } else{
        // console.log("Removing: #" + newDivId);
        $("#"+newDivId).remove();
        $(this).removeClass("hasBeenIncluded");
      }
    });
    requestedItemsList = requestedItemsList.substring(0, requestedItemsList.length-1);
    console.log("internal test: " + requestedItemsList);
    $("#delivery-list").val(requestedItemsList);
    sumItemList(".delivery-item-price", "#order-subtotal", "");
    deliveryCheckBtn();


  }

  $(".delivery-checkbox").click(function(){
    reviewCheckboxSelection();
  });

  function deliveryCheckBtn(){
    if ($("#delivery-list").val() != "" && valAddrDelivery("#validator-id", "#continue-btn", "#datepicker-value", "#delivery_time")){
      $("#continue-btn").removeAttr("disabled"); 
    } else{
      $("#continue-btn").attr("disabled", true); 
    }
  }


