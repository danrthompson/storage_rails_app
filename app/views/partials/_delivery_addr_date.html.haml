.boxed-grey.col-md-12
  .row.align-left#validator-id
    .col-md-6
      .form-group.address-form
        = field.label :address_line_1, "Address:"
        = field.text_field :address_line_1,  autofocus: true, placeholder:"Address Line 1", class:"form-control", id:""
        = field.text_field :address_line_2,  autofocus: true, placeholder:"Address Line 2", class:"form-control", id:""
        .row
          .col-md-6.col-sm-6.col-xs-6.col-lg-6
            = field.text_field :city,  autofocus: true, placeholder:"City", class:"col-md-6 form-control", id:""
          .col-md-3.col-sm-3.col-xs-3.col-lg-3.form-field-wrapper
            = field.text_field :state,  autofocus: true, class:"form-control", id:"", value: "CO", readonly: true
          .col-md-3.col-sm-3.col-xs-3.col-lg-3.form-field-wrapper
            = field.text_field :zip,  autofocus: true, placeholder:"zip", class:"form-control", id:""
    .col-md-6
      .form-group
        .row
          .col-md-12
            .form-group.delivery-date-group
              = field.label :phone_number, "Phone Number (for delivery)"
              = field.text_field :phone_number,  autofocus: true, placeholder:"(303) 555-1111", class:"form-control", id:""
        .row
          .col-md-12
            .form-group.delivery-date-group
              %label{:for => "name"} Any Special Instructions?
              = field.text_area :special_instructions, placeholder:"Message", rows:1, class:"form-control"
          %br/

:javascript
  $(document).ready(function() {
      

      $(".form-control").on('input', function() {
        $('#validator-id').data('bootstrapValidator').validate();
      });
    
      $(".form-control").focusout(function() {
        $('#validator-id').data('bootstrapValidator').validate();
      });


      $('#validator-id')
          .bootstrapValidator({
          feedbackIcons: {
          },
          fields: {
            'user[address_line_1]': {
              message: 'The address field is not valid',
              validators: {
                notEmpty: {
                  message: 'The address field can\'t be empty'
                },
                stringLength: {
                  min: 3,
                  message: '*The address must be a real'
                },
              }
            },
            'user[city]': {
              message: 'The city field is not valid',
              validators: {
                notEmpty: {
                  message: '*The city is required'
                },  
                stringLength:{
                  min: 2,
                  message: "Valid city is required"
                },
                regexp: {
                  regexp: /Boulder/g,
                  message: 'TSYN is only available in Boulder'
                }
              }
            },
            'user[zip]': {
              message: 'The zip code field is not valid',
              validators: {
                notEmpty: {
                  message: '*zip required'
                },
                between: {
                    min: 80301,
                    max: 80329,
                    message: 'Boulder zip required'
                }
              }
            },
            'user[state]': {
              message: 'The state field is not valid',
              validators: {
                notEmpty: {
                  message: '* state required.'
                },
                stringLength: {
                  min:2,
                  message: "Valid state required"
                }
              }
            },
            'user[phone_number]': {
              message: 'The address field is not valid',
              validators: {
                notEmpty: {
                  message: '*phone number required'
                },
                stringLength: {
                  min: 10,
                  message: 'Phone number invalid'
                }
              }
            }
          }
        })

        $('#validator-id').data('bootstrapValidator').validate();

    });
